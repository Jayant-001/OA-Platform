import { Contest } from "./types";

export const contests: Contest[] = [
    {
        id: "123e4567-e89b-12d3-a456-426614174000",
        title: "React Challenge",
        description: `<h2>hllo</h2><p><span style="color: rgb(153, 51, 255);">hello</span> <strong>world</strong></p><p><br></p><div class="ql-code-block-container" spellcheck="false"><div class="ql-code-block">hello wlrdl</div><div class="ql-code-block">sadflkjdsaf</div></div><p><u>lkwejoiewur</u></p>`,
        duration: 120,
        startTime: "2024-12-23T10:00:00",
        contestCode: "REACT123",
        joinDuration: 30,
        strictTime: true,
        createdBy: "123e4567-e89b-12d3-a456-426614174001",
        createdAt: "2024-12-20T08:00:00",
        updatedAt: "2024-12-20T08:00:00",
    },
    {
        id: "223e4567-e89b-12d3-a456-426614174002",
        title: "JavaScript Mastery",
        description: "A contest focused on advanced JavaScript concepts.",
        duration: 90,
        startTime: "2024-12-25T14:00:00",
        contestCode: "JSMASTERY",
        joinDuration: 20,
        strictTime: false,
        createdBy: "223e4567-e89b-12d3-a456-426614174003",
        createdAt: "2024-12-18T09:00:00",
        updatedAt: "2024-12-18T09:00:00",
    },
    {
        id: "323e4567-e89b-12d3-a456-426614174004",
        title: "HTML & CSS Basics",
        description:
            "A contest for beginners to test their HTML and CSS knowledge.",
        duration: 60,
        startTime: "2024-12-24T16:00:00Z",
        contestCode: "HTMLCSS001",
        joinDuration: 15,
        strictTime: true,
        createdBy: "323e4567-e89b-12d3-a456-426614174005",
        createdAt: "2024-12-19T10:00:00Z",
        updatedAt: "2024-12-19T10:00:00Z",
    },
    {
        id: "423e4567-e89b-12d3-a456-426614174006",
        title: "Node.js Backend Challenge",
        description:
            "A contest designed for backend developers focusing on Node.js.",
        duration: 180,
        startTime: "2024-12-27T18:00:00Z",
        contestCode: "NODEJS180",
        joinDuration: 45,
        strictTime: false,
        createdBy: "423e4567-e89b-12d3-a456-426614174007",
        createdAt: "2024-12-21T11:00:00Z",
        updatedAt: "2024-12-21T11:00:00Z",
    },
    {
        id: "523e4567-e89b-12d3-a456-426614174008",
        title: "Python Programming Contest",
        description:
            "A contest for Python developers to showcase their skills.",
        duration: 150,
        startTime: "2024-12-30T12:00:00Z",
        contestCode: "PYTHON150",
        joinDuration: 60,
        strictTime: true,
        createdBy: "523e4567-e89b-12d3-a456-426614174009",
        createdAt: "2024-12-22T13:00:00Z",
        updatedAt: "2024-12-22T13:00:00Z",
    },
];

export const users = [
    {
        id: "1",
        name: "John Doe",
        email: "john.doe@example.com",
        college: "MIT",
        batch: 2,
        branch: "Computer Science",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "2",
        name: "Alice Smith",
        email: "alice.smith@example.com",
        college: "Harvard",
        batch: 3,
        branch: "Electrical Engineering",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "3",
        name: "Bob Johnson",
        email: "bob.johnson@example.com",
        college: "Stanford",
        batch: 1,
        branch: "Mechanical Engineering",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "4",
        name: "Charlie Brown",
        email: "charlie.brown@example.com",
        college: "UC Berkeley",
        batch: 4,
        branch: "Civil Engineering",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "5",
        name: "David Lee",
        email: "david.lee@example.com",
        college: "Caltech",
        batch: 2,
        branch: "Biotechnology",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "6",
        name: "Eve Wilson",
        email: "eve.wilson@example.com",
        college: "MIT",
        batch: 3,
        branch: "Computer Science",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "7",
        name: "Frank Miller",
        email: "frank.miller@example.com",
        college: "Harvard",
        batch: 1,
        branch: "Electrical Engineering",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "8",
        name: "Grace Clark",
        email: "grace.clark@example.com",
        college: "Stanford",
        batch: 2,
        branch: "Mechanical Engineering",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "9",
        name: "Hannah Lewis",
        email: "hannah.lewis@example.com",
        college: "UC Berkeley",
        batch: 4,
        branch: "Civil Engineering",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "10",
        name: "Ivy Walker",
        email: "ivy.walker@example.com",
        college: "Caltech",
        batch: 1,
        branch: "Biotechnology",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "11",
        name: "Jack Harris",
        email: "jack.harris@example.com",
        college: "MIT",
        batch: 3,
        branch: "Computer Science",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "12",
        name: "Kim Young",
        email: "kim.young@example.com",
        college: "Harvard",
        batch: 2,
        branch: "Electrical Engineering",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "13",
        name: "Leo King",
        email: "leo.king@example.com",
        college: "Stanford",
        batch: 1,
        branch: "Mechanical Engineering",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "14",
        name: "Mona Scott",
        email: "mona.scott@example.com",
        college: "UC Berkeley",
        batch: 3,
        branch: "Civil Engineering",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "15",
        name: "Nina Adams",
        email: "nina.adams@example.com",
        college: "Caltech",
        batch: 4,
        branch: "Biotechnology",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "16",
        name: "Oscar Perez",
        email: "oscar.perez@example.com",
        college: "MIT",
        batch: 2,
        branch: "Computer Science",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "17",
        name: "Paul Thomas",
        email: "paul.thomas@example.com",
        college: "Harvard",
        batch: 3,
        branch: "Electrical Engineering",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "18",
        name: "Quinn Jackson",
        email: "quinn.jackson@example.com",
        college: "Stanford",
        batch: 1,
        branch: "Mechanical Engineering",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "19",
        name: "Rita White",
        email: "rita.white@example.com",
        college: "UC Berkeley",
        batch: 4,
        branch: "Civil Engineering",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
    {
        id: "20",
        name: "Sam Allen",
        email: "sam.allen@example.com",
        college: "Caltech",
        batch: 2,
        branch: "Biotechnology",
        created_at: "2024-12-23T00:00:00Z",
        updated_at: "2024-12-23T00:00:00Z",
    },
];

export const problems = [
    {
        id: "1",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        title: "Two Sum",
        difficulty: "easy",
        acceptance: 48.5,
        tags: ["Array", "Hash Table"],
        solved: false,
        points: 100,
    },
    {
        id: "2",
        title: "Add Two Numbers",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "medium",
        acceptance: 39.2,
        tags: ["Linked List", "Math"],
        solved: false,
        points: 200,
    },
    {
        id: "3",
        title: "Longest Substring Without Repeating Characters",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "medium",
        acceptance: 33.8,
        tags: ["String", "Sliding Window", "Hash Table"],
        solved: false,
        points: 200,
    },
    {
        id: "4",
        title: "Median of Two Sorted Arrays",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "hard",
        acceptance: 35.1,
        tags: ["Array", "Binary Search", "Divide and Conquer"],
        solved: false,
        points: 300,
    },
    {
        id: "5",
        title: "Valid Parentheses",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "easy",
        acceptance: 40.5,
        tags: ["String", "Stack"],
        solved: false,
        points: 100,
    },
    {
        id: "6",
        title: "Merge K Sorted Lists",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "hard",
        acceptance: 45.7,
        tags: ["Linked List", "Divide and Conquer", "Heap"],
        solved: false,
        points: 300,
    },
    {
        id: "7",
        title: "Maximum Subarray",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "medium",
        acceptance: 49.5,
        tags: ["Array", "Dynamic Programming"],
        solved: false,
        points: 200,
    },
    {
        id: "8",
        title: "Binary Tree Level Order Traversal",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "medium",
        acceptance: 42.1,
        tags: ["Tree", "BFS"],
        solved: false,
        points: 200,
    },
    {
        id: "9",
        title: "Climbing Stairs",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "easy",
        acceptance: 51.2,
        tags: ["Dynamic Programming"],
        solved: false,
        points: 100,
    },
    {
        id: "10",
        title: "Word Search",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "medium",
        acceptance: 38.9,
        tags: ["Array", "Backtracking", "Matrix"],
        solved: false,
        points: 200,
    },
    {
        id: "11",
        title: "Trapping Rain Water",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "hard",
        acceptance: 36.3,
        tags: ["Array", "Two Pointers", "Dynamic Programming"],
        solved: false,
        points: 300,
    },
    {
        id: "12",
        title: "Best Time to Buy and Sell Stock",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "easy",
        acceptance: 54.3,
        tags: ["Array", "Dynamic Programming"],
        solved: false,
        points: 100,
    },
    {
        id: "13",
        title: "LRU Cache",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "medium",
        acceptance: 40.6,
        tags: ["Hash Table", "Linked List", "Design"],
        solved: false,
        points: 200,
    },
    {
        id: "14",
        title: "Number of Islands",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "medium",
        acceptance: 44.8,
        tags: ["Array", "DFS", "BFS", "Matrix"],
        solved: false,
        points: 200,
    },
    {
        id: "15",
        title: "Course Schedule",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "medium",
        acceptance: 41.7,
        tags: ["Graph", "DFS", "BFS"],
        solved: false,
        points: 200,
    },
    {
        id: "16",
        title: "Merge Intervals",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "medium",
        acceptance: 43.2,
        tags: ["Array", "Sorting"],
        solved: false,
        points: 200,
    },
    {
        id: "17",
        title: "Regular Expression Matching",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "hard",
        acceptance: 28.4,
        tags: ["String", "Dynamic Programming", "Recursion"],
        solved: false,
        points: 300,
    },
    {
        id: "18",
        title: "Palindrome Number",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "easy",
        acceptance: 52.1,
        tags: ["Math"],
        solved: false,
        points: 100,
    },
    {
        id: "19",
        title: "Longest Consecutive Sequence",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "medium",
        acceptance: 40.9,
        tags: ["Array", "Hash Table", "Union Find"],
        solved: false,
        points: 200,
    },
    {
        id: "20",
        title: "Minimum Window Substring",
        problem_statement: `<p>You are given an integer array nums of length n and a 2D array queries where queries[i] = [li, ri].</p><p><br></p><p>Each queries[i] represents the following action on nums:</p><p><br></p><p>Decrement the value at each index in the range [li, ri] in nums by at most 1.</p><p>The amount by which the value is decremented can be chosen independently for each index.</p><p>A Zero Array is an array with all its elements equal to 0.</p><p><br></p><p>Return the maximum number of elements that can be removed from queries, such that nums can still be converted to a zero array using the remaining queries. If it is not possible to convert nums to a zero array, return -1.</p><p><br></p><h2><strong>Example 1:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [2,0,2], queries = [[0,2],[0,2],[1,1]]</p><p><br></p><h3><strong>Output:</strong> 1</h3><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>After removing queries[2], nums can still be converted to a zero array.</p><p><br></p><p>Using queries[0], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p>Using queries[1], decrement nums[0] and nums[2] by 1 and nums[1] by 0.</p><p><br></p><h2><strong>Example 2:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]</p><p><br></p><p><strong>Output:</strong> 2</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>We can remove queries[2] and queries[3].</p><p><br></p><h2><strong>Example 3:</strong></h2><p><br></p><p><strong>Input:</strong> nums = [1,2,3,4], queries = [[0,3]]</p><p><br></p><p><strong>Output:</strong> -1</p><p><br></p><p><strong>Explanation:</strong></p><p><br></p><p>nums cannot be converted to a zero array even after using all the queries.</p><p><br></p><h2><strong>Constraints:</strong></h2><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= nums.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= nums[i] &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>1 &lt;= queries.length &lt;= 10<sup>5</sup></li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>queries[i].length == 2</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>0 &lt;= li &lt;= ri &lt; nums.length</li></ol>`,
        difficulty: "hard",
        acceptance: 31.2,
        tags: ["String", "Sliding Window", "Hash Table"],
        solved: false,
        points: 300,
    },
] as const;


export const dummyContest = {
    id: "a8bab1e6-09a3-459d-8027-a57e4eb131e9",
    title: "DP Contest updated by mirdul",
    description:
        '<h1><span style="color: rgb(230, 0, 0);">About the Contest Updated</span></h1><p>This is an unofficial contest to practice DP (Dynamic Programming). We selected 26 DPs, mostly basic ones, and prepared a problem to learn each of them. Test your skills during the real contest, and brush them up after it ends.</p><p><br></p><h3><strong>Details</strong></h3><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>Time (YY-MM-DD): 2019-01-06(Sun) 11:00-16:00 UTC (postponed)</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>Duration: 5 hours</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>Number of Tasks: 26</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>Point Values: 100 points each</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>Rated: No</li></ol><p><br></p><h3><strong>Rules</strong></h3><p>The rules for ABC, ARC and AGC apply. The important points are:</p><p><br></p><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>This is an individual match; no teams allowed.</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>Revealing the solutions to others during the contest is prohibited.</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>The penalty for an incorrect submission is 5 minutes.</li></ol><p><br></p><h3><strong>Notices</strong></h3><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>The problems may NOT be arranged in ascending order of difficulty.</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>There are many famous problems.</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>The contest is not intended for experts such as reds (anyone can compete, though).</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>It is recommended to use languages that are not too slow (such as C++ and Java).</li></ol><p><br></p><h3><strong>Staff</strong></h3><ol><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>Problems written by: sugim48</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>Tested by: asi1024, camypaper</li><li data-list="bullet"><span class="ql-ui" contenteditable="false"></span>Translated by: evima</li></ol>',
    duration: 1000,
    start_time: "2024-12-24T12:35:00.000Z",
    contest_code: "DP_CONTEST_update_bymridul",
    join_duration: 100,
    strict_time: true,
    created_by: "544d4a2e-305e-4354-aa62-2d5081da40b0",
    created_at: "2024-12-24T04:26:52.227Z",
    updated_at: "2024-12-24T01:30:44.887Z",
    problems: [
        {
            problem_id: "55c18fb1-72b6-478e-84ed-f3e180cd0261",
            points: 10,
        },
        {
            problem_id: "b3a7eaf8-cbf1-47a1-b9a3-a8d4350c0800",
            points: 123,
        },
    ],
    users: [
        "57fe641a-f251-4fc5-9217-f43ced9dd982",
        "c6f9a1d6-c04d-443c-b7a2-d1e3f1342c4a",
        "dd149bdc-478f-4fd7-abcd-a364866df5a2",
    ],
};
